{"ast":null,"code":"var _jsxFileName = \"/Users/samjain/seq/sequence/src/components/GameBoard.tsx\";\nimport React from 'react';\nimport { TokenType } from '../models/types';\nimport { LazyMotion, domAnimation, m, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatePresenceFixedType = AnimatePresence;\n\n// CSS styles for the board container\nconst boardContainerStyles = {\n  perspective: '1000px',\n  transformStyle: 'preserve-3d',\n  width: '650px',\n  height: '650px',\n  margin: '0 auto'\n};\n\n// CSS styles for the board\nconst boardStyles = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(10, 1fr)',\n  gridTemplateRows: 'repeat(10, 1fr)',\n  gap: '4px',\n  width: '100%',\n  height: '100%',\n  padding: '10px',\n  backgroundColor: '#2c3e50',\n  borderRadius: '15px',\n  boxShadow: '0 20px 40px rgba(0,0,0,0.3)',\n  transform: 'rotateX(5deg)',\n  transformStyle: 'preserve-3d'\n};\n\n// CSS styles for a board space\nconst spaceStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#fff',\n  fontSize: '14px',\n  position: 'relative',\n  cursor: 'pointer',\n  borderRadius: '8px',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n  transition: 'all 0.3s ease',\n  transformStyle: 'preserve-3d',\n  transform: 'translateZ(1px)',\n  overflow: 'hidden'\n};\n\n// CSS styles for highlighted valid positions\nconst highlightedSpaceStyles = {\n  ...spaceStyles,\n  backgroundColor: '#fff3cc',\n  boxShadow: '0 0 20px rgba(255, 215, 0, 0.8)',\n  border: '2px solid gold',\n  transform: 'translateZ(8px)',\n  animation: 'pulse 2s infinite ease-in-out',\n  zIndex: 5\n};\n\n// CSS styles for corner spaces\nconst cornerStyles = {\n  ...spaceStyles,\n  backgroundColor: '#34495e',\n  color: '#fff',\n  fontWeight: 'bold',\n  fontSize: '16px',\n  textTransform: 'uppercase',\n  letterSpacing: '1px'\n};\n\n// Add keyframe animations\nconst animations = `\n@keyframes pulse {\n  0% { box-shadow: 0 0 15px rgba(255, 215, 0, 0.7); transform: translateZ(5px); }\n  50% { box-shadow: 0 0 25px rgba(255, 215, 0, 0.9); transform: translateZ(10px); }\n  100% { box-shadow: 0 0 15px rgba(255, 215, 0, 0.7); transform: translateZ(5px); }\n}\n\n@keyframes hover {\n  0% { transform: translateZ(1px); }\n  100% { transform: translateZ(10px); }\n}\n\n@keyframes placeToken {\n  0% { transform: scale(0) rotate(180deg); }\n  60% { transform: scale(1.2) rotate(0deg); }\n  100% { transform: scale(1) rotate(0deg); }\n}\n`;\n\n// Add the animations to the document\nconst styleSheet = document.createElement('style');\nstyleSheet.textContent = animations;\ndocument.head.appendChild(styleSheet);\n\n// CSS styles for tokens\nconst tokenStyles = tokenType => {\n  // Base token styles\n  const baseStyles = {\n    width: '70%',\n    height: '70%',\n    borderRadius: '50%',\n    position: 'absolute',\n    top: '15%',\n    left: '15%',\n    animation: 'placeToken 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n  };\n\n  // Add color based on token type with modern gradients\n  switch (tokenType) {\n    case TokenType.PLAYER1:\n      return {\n        ...baseStyles,\n        background: 'linear-gradient(135deg, #2196F3, #0D47A1)',\n        border: '2px solid #1976D2'\n      };\n    case TokenType.PLAYER2:\n      return {\n        ...baseStyles,\n        background: 'linear-gradient(135deg, #f44336, #b71c1c)',\n        border: '2px solid #d32f2f'\n      };\n    default:\n      return baseStyles;\n  }\n};\n\n// Helper to convert card to SVG filename\nconst getCardFilename = card => {\n  const suitMap = {\n    'hearts': 'HEART',\n    'diamonds': 'DIAMOND',\n    'clubs': 'CLUB',\n    'spades': 'SPADE'\n  };\n  const rankMap = {\n    'A': '1',\n    '2': '2',\n    '3': '3',\n    '4': '4',\n    '5': '5',\n    '6': '6',\n    '7': '7',\n    '8': '8',\n    '9': '9',\n    '10': '10',\n    'J': '11-JACK',\n    'Q': '12-QUEEN',\n    'K': '13-KING'\n  };\n  const suit = suitMap[card.suit];\n  const rank = rankMap[card.rank];\n  return `${process.env.PUBLIC_URL}/cards/${suit}-${rank}.svg`;\n};\n\n// Component for displaying a single card\nconst CardDisplay = ({\n  card\n}) => {\n  const cardImageUrl = getCardFilename(card);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundImage: `url(${cardImageUrl})`,\n      backgroundSize: 'contain',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      transform: 'translateZ(2px)'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for a single board space\n_c = CardDisplay;\nconst BoardSpaceComponent = ({\n  space,\n  row,\n  col,\n  isValidPosition,\n  onSpaceClick\n}) => {\n  const handleClick = () => {\n    if (onSpaceClick) {\n      onSpaceClick(row, col);\n    }\n  };\n\n  // Determine which style to use\n  let currentStyle = space.isCorner ? cornerStyles : spaceStyles;\n  if (isValidPosition) {\n    currentStyle = highlightedSpaceStyles;\n  }\n\n  // Framer Motion variants for hover animation\n  const variants = {\n    initial: {\n      scale: 1,\n      z: 1\n    },\n    hover: {\n      scale: 1.05,\n      z: 10,\n      boxShadow: '0 5px 15px rgba(0,0,0,0.2)',\n      transition: {\n        duration: 0.2\n      }\n    }\n  };\n\n  // Token animation variants\n  const tokenVariants = {\n    initial: {\n      scale: 0,\n      rotate: 180\n    },\n    animate: {\n      scale: 1,\n      rotate: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 200,\n        damping: 15\n      }\n    },\n    exit: {\n      scale: 0,\n      rotate: -180\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: /*#__PURE__*/_jsxDEV(m.div, {\n      style: currentStyle,\n      onClick: handleClick,\n      \"data-testid\": `space-${row}-${col}`,\n      initial: \"initial\",\n      whileHover: \"hover\",\n      variants: variants,\n      children: space.isCorner ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"FREE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [space.card && /*#__PURE__*/_jsxDEV(CardDisplay, {\n          card: space.card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatePresenceFixedType, {\n            mode: \"wait\",\n            children: space.token !== TokenType.NONE && /*#__PURE__*/_jsxDEV(m.div, {\n              style: tokenStyles(space.token),\n              initial: \"initial\",\n              animate: \"animate\",\n              exit: \"exit\",\n              variants: tokenVariants\n            }, `token-${row}-${col}-${space.token}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n// Main GameBoard component\n_c2 = BoardSpaceComponent;\nconst GameBoard = ({\n  board,\n  onSpaceClick,\n  validPositions\n}) => {\n  // Create a Set of valid positions for O(1) lookup\n  const validPositionsSet = new Set(validPositions.map(pos => `${pos.row},${pos.col}`));\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: /*#__PURE__*/_jsxDEV(m.div, {\n      style: boardContainerStyles,\n      initial: {\n        opacity: 0,\n        y: 50\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boardStyles,\n        \"data-testid\": \"game-board\",\n        children: board.map((row, rowIndex) => row.map((space, colIndex) => /*#__PURE__*/_jsxDEV(BoardSpaceComponent, {\n          space: space,\n          row: rowIndex,\n          col: colIndex,\n          isValidPosition: validPositionsSet.has(`${rowIndex},${colIndex}`),\n          onSpaceClick: onSpaceClick\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GameBoard;\nexport default GameBoard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CardDisplay\");\n$RefreshReg$(_c2, \"BoardSpaceComponent\");\n$RefreshReg$(_c3, \"GameBoard\");","map":{"version":3,"names":["React","TokenType","LazyMotion","domAnimation","m","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimatePresenceFixedType","boardContainerStyles","perspective","transformStyle","width","height","margin","boardStyles","display","gridTemplateColumns","gridTemplateRows","gap","padding","backgroundColor","borderRadius","boxShadow","transform","spaceStyles","flexDirection","justifyContent","alignItems","fontSize","position","cursor","transition","overflow","highlightedSpaceStyles","border","animation","zIndex","cornerStyles","color","fontWeight","textTransform","letterSpacing","animations","styleSheet","document","createElement","textContent","head","appendChild","tokenStyles","tokenType","baseStyles","top","left","PLAYER1","background","PLAYER2","getCardFilename","card","suitMap","rankMap","suit","rank","process","env","PUBLIC_URL","CardDisplay","cardImageUrl","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","fileName","_jsxFileName","lineNumber","columnNumber","_c","BoardSpaceComponent","space","row","col","isValidPosition","onSpaceClick","handleClick","currentStyle","isCorner","variants","initial","scale","z","hover","duration","tokenVariants","rotate","animate","type","stiffness","damping","exit","features","children","div","onClick","whileHover","mode","token","NONE","_c2","GameBoard","board","validPositions","validPositionsSet","Set","map","pos","opacity","y","rowIndex","colIndex","has","_c3","$RefreshReg$"],"sources":["/Users/samjain/seq/sequence/src/components/GameBoard.tsx"],"sourcesContent":["import React, { ElementType } from 'react';\nimport { Board, BoardSpace, Card, TokenType, Position } from '../models/types';\nimport { LazyMotion, domAnimation, m, AnimatePresence } from 'framer-motion';\n\nconst AnimatePresenceFixedType = AnimatePresence as ElementType;\n\n// CSS styles for the board container\nconst boardContainerStyles: React.CSSProperties = {\n  perspective: '1000px',\n  transformStyle: 'preserve-3d',\n  width: '650px',\n  height: '650px',\n  margin: '0 auto',\n};\n\n// CSS styles for the board\nconst boardStyles: React.CSSProperties = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(10, 1fr)',\n  gridTemplateRows: 'repeat(10, 1fr)',\n  gap: '4px',\n  width: '100%',\n  height: '100%',\n  padding: '10px',\n  backgroundColor: '#2c3e50',\n  borderRadius: '15px',\n  boxShadow: '0 20px 40px rgba(0,0,0,0.3)',\n  transform: 'rotateX(5deg)',\n  transformStyle: 'preserve-3d',\n};\n\n// CSS styles for a board space\nconst spaceStyles: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#fff',\n  fontSize: '14px',\n  position: 'relative',\n  cursor: 'pointer',\n  borderRadius: '8px',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n  transition: 'all 0.3s ease',\n  transformStyle: 'preserve-3d',\n  transform: 'translateZ(1px)',\n  overflow: 'hidden',\n};\n\n// CSS styles for highlighted valid positions\nconst highlightedSpaceStyles: React.CSSProperties = {\n  ...spaceStyles,\n  backgroundColor: '#fff3cc',\n  boxShadow: '0 0 20px rgba(255, 215, 0, 0.8)',\n  border: '2px solid gold',\n  transform: 'translateZ(8px)',\n  animation: 'pulse 2s infinite ease-in-out',\n  zIndex: 5,\n};\n\n// CSS styles for corner spaces\nconst cornerStyles: React.CSSProperties = {\n  ...spaceStyles,\n  backgroundColor: '#34495e',\n  color: '#fff',\n  fontWeight: 'bold',\n  fontSize: '16px',\n  textTransform: 'uppercase',\n  letterSpacing: '1px',\n};\n\n// Add keyframe animations\nconst animations = `\n@keyframes pulse {\n  0% { box-shadow: 0 0 15px rgba(255, 215, 0, 0.7); transform: translateZ(5px); }\n  50% { box-shadow: 0 0 25px rgba(255, 215, 0, 0.9); transform: translateZ(10px); }\n  100% { box-shadow: 0 0 15px rgba(255, 215, 0, 0.7); transform: translateZ(5px); }\n}\n\n@keyframes hover {\n  0% { transform: translateZ(1px); }\n  100% { transform: translateZ(10px); }\n}\n\n@keyframes placeToken {\n  0% { transform: scale(0) rotate(180deg); }\n  60% { transform: scale(1.2) rotate(0deg); }\n  100% { transform: scale(1) rotate(0deg); }\n}\n`;\n\n// Add the animations to the document\nconst styleSheet = document.createElement('style');\nstyleSheet.textContent = animations;\ndocument.head.appendChild(styleSheet);\n\n// CSS styles for tokens\nconst tokenStyles = (tokenType: TokenType): React.CSSProperties => {\n  // Base token styles\n  const baseStyles: React.CSSProperties = {\n    width: '70%',\n    height: '70%',\n    borderRadius: '50%',\n    position: 'absolute',\n    top: '15%',\n    left: '15%',\n    animation: 'placeToken 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n  };\n  \n  // Add color based on token type with modern gradients\n  switch (tokenType) {\n    case TokenType.PLAYER1:\n      return { \n        ...baseStyles, \n        background: 'linear-gradient(135deg, #2196F3, #0D47A1)',\n        border: '2px solid #1976D2'\n      };\n    case TokenType.PLAYER2:\n      return { \n        ...baseStyles, \n        background: 'linear-gradient(135deg, #f44336, #b71c1c)',\n        border: '2px solid #d32f2f'\n      };\n    default:\n      return baseStyles;\n  }\n};\n\n// Helper to convert card to SVG filename\nconst getCardFilename = (card: Card): string => {\n  const suitMap = {\n    'hearts': 'HEART',\n    'diamonds': 'DIAMOND',\n    'clubs': 'CLUB',\n    'spades': 'SPADE'\n  };\n  \n  const rankMap = {\n    'A': '1',\n    '2': '2',\n    '3': '3',\n    '4': '4',\n    '5': '5',\n    '6': '6',\n    '7': '7',\n    '8': '8',\n    '9': '9',\n    '10': '10',\n    'J': '11-JACK',\n    'Q': '12-QUEEN',\n    'K': '13-KING'\n  };\n\n  const suit = suitMap[card.suit];\n  const rank = rankMap[card.rank];\n  \n  return `${process.env.PUBLIC_URL}/cards/${suit}-${rank}.svg`;\n};\n\n// Component for displaying a single card\nconst CardDisplay: React.FC<{ card: Card }> = ({ card }) => {\n  const cardImageUrl = getCardFilename(card);\n  \n  return (\n    <div style={{ \n      width: '100%', \n      height: '100%',\n      backgroundImage: `url(${cardImageUrl})`,\n      backgroundSize: 'contain',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      transform: 'translateZ(2px)',\n    }} />\n  );\n};\n\n// Component for a single board space\ninterface BoardSpaceProps {\n  space: BoardSpace;\n  row: number;\n  col: number;\n  isValidPosition: boolean;\n  onSpaceClick?: (row: number, col: number) => void;\n}\n\nconst BoardSpaceComponent: React.FC<BoardSpaceProps> = ({ \n  space, \n  row, \n  col, \n  isValidPosition,\n  onSpaceClick \n}) => {\n  const handleClick = () => {\n    if (onSpaceClick) {\n      onSpaceClick(row, col);\n    }\n  };\n\n  // Determine which style to use\n  let currentStyle = space.isCorner ? cornerStyles : spaceStyles;\n  if (isValidPosition) {\n    currentStyle = highlightedSpaceStyles;\n  }\n\n  // Framer Motion variants for hover animation\n  const variants = {\n    initial: { scale: 1, z: 1 },\n    hover: { \n      scale: 1.05, \n      z: 10,\n      boxShadow: '0 5px 15px rgba(0,0,0,0.2)',\n      transition: { duration: 0.2 }\n    }\n  };\n\n  // Token animation variants\n  const tokenVariants = {\n    initial: { scale: 0, rotate: 180 },\n    animate: { \n      scale: 1, \n      rotate: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 200,\n        damping: 15\n      }\n    },\n    exit: { scale: 0, rotate: -180 }\n  };\n  \n  return (\n    <LazyMotion features={domAnimation}>\n      <m.div \n        style={currentStyle}\n        onClick={handleClick}\n        data-testid={`space-${row}-${col}`}\n        initial=\"initial\"\n        whileHover=\"hover\"\n        variants={variants}\n      >\n        {space.isCorner ? (\n          <div>FREE</div>\n        ) : (\n          <>\n            {space.card && <CardDisplay card={space.card} />}\n            <div>\n              <AnimatePresenceFixedType mode=\"wait\">\n                {space.token !== TokenType.NONE && (\n                  <m.div \n                    key={`token-${row}-${col}-${space.token}`}\n                    style={tokenStyles(space.token)}\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={tokenVariants}\n                  />\n                )}\n              </AnimatePresenceFixedType>\n            </div>\n          </>\n        )}\n      </m.div>\n    </LazyMotion>\n  );\n};\n\n// Main GameBoard component\ninterface GameBoardProps {\n  board: Board;\n  onSpaceClick: (row: number, col: number) => void;\n  validPositions: Position[];\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({ board, onSpaceClick, validPositions }) => {\n  // Create a Set of valid positions for O(1) lookup\n  const validPositionsSet = new Set(\n    validPositions.map(pos => `${pos.row},${pos.col}`)\n  );\n\n  return (\n    <LazyMotion features={domAnimation}>\n      <m.div \n        style={boardContainerStyles}\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div style={boardStyles} data-testid=\"game-board\">\n          {board.map((row, rowIndex) =>\n            row.map((space, colIndex) => (\n              <BoardSpaceComponent\n                key={`${rowIndex}-${colIndex}`}\n                space={space}\n                row={rowIndex}\n                col={colIndex}\n                isValidPosition={validPositionsSet.has(`${rowIndex},${colIndex}`)}\n                onSpaceClick={onSpaceClick}\n              />\n            ))\n          )}\n        </div>\n      </m.div>\n    </LazyMotion>\n  );\n};\n\nexport default GameBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}