{"ast":null,"code":"import React,{useState,useEffect}from'react';import{TokenType}from'../models/types';import{getCardPositions}from'../utils/boardUtils';import GameBoard from'./GameBoard';import PlayerHand from'./PlayerHand';import{LazyMotion,domAnimation,m}from'framer-motion';// CSS styles for game container\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const containerStyles={maxWidth:'1200px',margin:'0 auto',padding:'10px',paddingBottom:'220px',// Add padding at the bottom to account for the fixed hand\nposition:'relative'// For absolute positioning of the floating title\n};// CSS styles for floating title\nconst floatingTitleStyles={position:'absolute',left:'10px',top:'50%',transform:'translateY(-50%) rotate(-90deg)',transformOrigin:'left center',fontSize:'2.5rem',fontWeight:700,color:'rgba(255, 255, 255, 0.15)',letterSpacing:'5px',textTransform:'uppercase',pointerEvents:'none',zIndex:0,textShadow:'0 0 10px rgba(76, 175, 80, 0.2)'};// CSS styles for status display\nconst statusStyles={textAlign:'center',margin:'15px 0',padding:'10px',backgroundColor:'rgba(255, 255, 255, 0.1)',borderRadius:'8px',fontWeight:'bold',color:'#fff',backdropFilter:'blur(5px)',boxShadow:'0 4px 12px rgba(0, 0, 0, 0.1)',border:'1px solid rgba(255, 255, 255, 0.05)'};// CSS styles for player status\nconst playerStatusStyles={display:'flex',justifyContent:'space-between',alignItems:'center',margin:'12px 0',padding:'8px 20px',backgroundColor:'rgba(0, 0, 0, 0.2)',borderRadius:'12px',backdropFilter:'blur(5px)',position:'relative'};// CSS styles for sequence title in player bar\nconst sequenceTitleStyles={fontSize:'1.5rem',fontWeight:'bold',letterSpacing:'3px',color:'rgba(255, 215, 0, 0.9)',textShadow:'0 0 8px rgba(255, 215, 0, 0.4)',margin:'0 15px',textTransform:'uppercase',whiteSpace:'nowrap'};// CSS styles for player container\nconst playerContainerStyles={display:'flex',gap:'15px',alignItems:'center'};// CSS styles for active player\nconst activePlayerStyles={fontWeight:'bold',color:'#4CAF50',border:'2px solid #4CAF50',borderRadius:'8px',padding:'10px',background:'rgba(76, 175, 80, 0.1)',boxShadow:'0 0 15px rgba(76, 175, 80, 0.3)',transition:'all 0.3s ease'};// CSS styles for inactive player\nconst inactivePlayerStyles={color:'#fff',padding:'10px',opacity:0.7,transition:'all 0.3s ease'};const GameContainer=_ref=>{var _gameState$players$ga;let{gameState,onMove,currentPlayerId}=_ref;const[selectedCardIndex,setSelectedCardIndex]=useState(null);const[validPositions,setValidPositions]=useState([]);const[statusMessage,setStatusMessage]=useState('Waiting for game to start...');// Get current player's information\nconst currentPlayer=gameState===null||gameState===void 0?void 0:gameState.players.find(p=>p.id===currentPlayerId);const currentPlayerIndex=gameState===null||gameState===void 0?void 0:gameState.players.findIndex(p=>p.id===currentPlayerId);const isCurrentPlayerTurn=currentPlayer&&gameState?gameState.players[gameState.currentTurn].id===currentPlayer.id:false;console.log('Turn state:',{currentPlayerId,currentPlayerIndex,currentTurn:gameState===null||gameState===void 0?void 0:gameState.currentTurn,currentTurnPlayerId:gameState===null||gameState===void 0?void 0:(_gameState$players$ga=gameState.players[gameState===null||gameState===void 0?void 0:gameState.currentTurn])===null||_gameState$players$ga===void 0?void 0:_gameState$players$ga.id,isCurrentPlayerTurn,allPlayers:gameState===null||gameState===void 0?void 0:gameState.players.map(p=>({id:p.id,name:p.name,tokenType:p.tokenType}))});useEffect(()=>{if(gameState){if(isCurrentPlayerTurn){setStatusMessage(\"It's your turn!\");}else{const activePlayer=gameState.players[gameState.currentTurn];setStatusMessage(`Waiting for ${(activePlayer===null||activePlayer===void 0?void 0:activePlayer.name)||'opponent'} to play...`);}}},[gameState===null||gameState===void 0?void 0:gameState.currentTurn,isCurrentPlayerTurn]);// Handle card selection\nconst handleCardSelect=index=>{if(!gameState||!isCurrentPlayerTurn||!currentPlayer)return;// If selecting the same card, deselect it\nif(selectedCardIndex===index){setSelectedCardIndex(null);setValidPositions([]);return;}const card=currentPlayer.hand[index];if(!card)return;// Calculate valid positions based on card type\nlet positions=[];if(card.isOneEyedJack){// For one-eyed jacks, valid positions are opponent tokens\ngameState.board.forEach((row,rowIndex)=>{row.forEach((space,colIndex)=>{const token=space.token;if(token!==TokenType.NONE&&token!==currentPlayer.tokenType){positions.push({row:rowIndex,col:colIndex});}});});}else if(card.isTwoEyedJack){// For two-eyed jacks, valid positions are empty spaces\ngameState.board.forEach((row,rowIndex)=>{row.forEach((space,colIndex)=>{if(space.token===TokenType.NONE&&!space.isCorner){positions.push({row:rowIndex,col:colIndex});}});});}else{// For regular cards, get all matching card positions that aren't occupied\npositions=getCardPositions(gameState.board,card).filter(pos=>gameState.board[pos.row][pos.col].token===TokenType.NONE);}setSelectedCardIndex(index);setValidPositions(positions);setStatusMessage(positions.length>0?'Select a highlighted space to place your token':'No valid moves available for this card. Select another card.');};// Handle board space click\nconst handleBoardSpaceClick=(row,col)=>{if(!gameState||selectedCardIndex===null||!isCurrentPlayerTurn){console.log('Board click prevented:',{hasGameState:!!gameState,selectedCardIndex,isCurrentPlayerTurn,currentPlayerId,currentTurn:gameState===null||gameState===void 0?void 0:gameState.currentTurn});return;}// Check if the clicked position is valid\nconst isValidMove=validPositions.some(pos=>pos.row===row&&pos.col===col);if(!isValidMove){setStatusMessage('Invalid move! Please select a highlighted space.');return;}console.log('Making move:',{cardIndex:selectedCardIndex,position:{row,col},currentPlayerId,currentTurn:gameState.currentTurn});// Send the move to the server\nonMove({cardIndex:selectedCardIndex,position:{row,col}});// Reset selection\nsetSelectedCardIndex(null);setValidPositions([]);};if(!gameState||!currentPlayer){return/*#__PURE__*/_jsx(\"div\",{style:containerStyles,children:\"Waiting for game to start...\"});}return/*#__PURE__*/_jsx(LazyMotion,{features:domAnimation,children:/*#__PURE__*/_jsxs(\"div\",{style:containerStyles,children:[/*#__PURE__*/_jsxs(m.div,{style:playerStatusStyles,initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:0.5},children:[/*#__PURE__*/_jsx(\"div\",{style:playerContainerStyles,children:gameState.players.slice(0,Math.ceil(gameState.players.length/2)).map(player=>/*#__PURE__*/_jsxs(m.div,{style:player.id===gameState.players[gameState.currentTurn].id?activePlayerStyles:inactivePlayerStyles,whileHover:{scale:1.05},children:[player.name,player.id===currentPlayerId&&' (You)']},player.id))}),/*#__PURE__*/_jsx(m.div,{style:sequenceTitleStyles,initial:{opacity:0,scale:0.8},animate:{opacity:1,scale:1},transition:{delay:0.3,duration:0.5},children:\"Sequence\"}),/*#__PURE__*/_jsx(\"div\",{style:playerContainerStyles,children:gameState.players.slice(Math.ceil(gameState.players.length/2)).map(player=>/*#__PURE__*/_jsxs(m.div,{style:player.id===gameState.players[gameState.currentTurn].id?activePlayerStyles:inactivePlayerStyles,whileHover:{scale:1.05},children:[player.name,player.id===currentPlayerId&&' (You)']},player.id))})]}),/*#__PURE__*/_jsx(m.div,{style:statusStyles,initial:{opacity:0},animate:{opacity:1},transition:{duration:0.5,delay:0.2},children:statusMessage}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'100px'},children:/*#__PURE__*/_jsx(GameBoard,{board:gameState.board,onSpaceClick:handleBoardSpaceClick,validPositions:validPositions})}),/*#__PURE__*/_jsx(PlayerHand,{hand:currentPlayer.hand,selectedCardIndex:selectedCardIndex,onCardSelect:handleCardSelect})]})});};export default GameContainer;","map":{"version":3,"names":["React","useState","useEffect","TokenType","getCardPositions","GameBoard","PlayerHand","LazyMotion","domAnimation","m","jsx","_jsx","jsxs","_jsxs","containerStyles","maxWidth","margin","padding","paddingBottom","position","floatingTitleStyles","left","top","transform","transformOrigin","fontSize","fontWeight","color","letterSpacing","textTransform","pointerEvents","zIndex","textShadow","statusStyles","textAlign","backgroundColor","borderRadius","backdropFilter","boxShadow","border","playerStatusStyles","display","justifyContent","alignItems","sequenceTitleStyles","whiteSpace","playerContainerStyles","gap","activePlayerStyles","background","transition","inactivePlayerStyles","opacity","GameContainer","_ref","_gameState$players$ga","gameState","onMove","currentPlayerId","selectedCardIndex","setSelectedCardIndex","validPositions","setValidPositions","statusMessage","setStatusMessage","currentPlayer","players","find","p","id","currentPlayerIndex","findIndex","isCurrentPlayerTurn","currentTurn","console","log","currentTurnPlayerId","allPlayers","map","name","tokenType","activePlayer","handleCardSelect","index","card","hand","positions","isOneEyedJack","board","forEach","row","rowIndex","space","colIndex","token","NONE","push","col","isTwoEyedJack","isCorner","filter","pos","length","handleBoardSpaceClick","hasGameState","isValidMove","some","cardIndex","style","children","features","div","initial","y","animate","duration","slice","Math","ceil","player","whileHover","scale","delay","marginBottom","onSpaceClick","onCardSelect"],"sources":["/Users/samjain/seq/sequence/src/components/GameContainer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GameState, TokenType, Card, Position, Player } from '../models/types';\nimport { placeToken, removeToken, getCardPositions } from '../utils/boardUtils';\nimport { findCardOnBoard } from '../utils/cardUtils';\nimport GameBoard from './GameBoard';\nimport PlayerHand from './PlayerHand';\nimport { LazyMotion, domAnimation, m } from 'framer-motion';\n\n// CSS styles for game container\nconst containerStyles: React.CSSProperties = {\n  maxWidth: '1200px',\n  margin: '0 auto',\n  padding: '10px',\n  paddingBottom: '220px', // Add padding at the bottom to account for the fixed hand\n  position: 'relative', // For absolute positioning of the floating title\n};\n\n// CSS styles for floating title\nconst floatingTitleStyles: React.CSSProperties = {\n  position: 'absolute',\n  left: '10px',\n  top: '50%',\n  transform: 'translateY(-50%) rotate(-90deg)',\n  transformOrigin: 'left center',\n  fontSize: '2.5rem',\n  fontWeight: 700,\n  color: 'rgba(255, 255, 255, 0.15)',\n  letterSpacing: '5px',\n  textTransform: 'uppercase',\n  pointerEvents: 'none',\n  zIndex: 0,\n  textShadow: '0 0 10px rgba(76, 175, 80, 0.2)',\n};\n\n// CSS styles for status display\nconst statusStyles: React.CSSProperties = {\n  textAlign: 'center',\n  margin: '15px 0',\n  padding: '10px',\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  borderRadius: '8px',\n  fontWeight: 'bold',\n  color: '#fff',\n  backdropFilter: 'blur(5px)',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  border: '1px solid rgba(255, 255, 255, 0.05)',\n};\n\n// CSS styles for player status\nconst playerStatusStyles: React.CSSProperties = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  margin: '12px 0',\n  padding: '8px 20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)',\n  borderRadius: '12px',\n  backdropFilter: 'blur(5px)',\n  position: 'relative',\n};\n\n// CSS styles for sequence title in player bar\nconst sequenceTitleStyles: React.CSSProperties = {\n  fontSize: '1.5rem',\n  fontWeight: 'bold',\n  letterSpacing: '3px',\n  color: 'rgba(255, 215, 0, 0.9)',\n  textShadow: '0 0 8px rgba(255, 215, 0, 0.4)',\n  margin: '0 15px',\n  textTransform: 'uppercase',\n  whiteSpace: 'nowrap',\n};\n\n// CSS styles for player container\nconst playerContainerStyles: React.CSSProperties = {\n  display: 'flex',\n  gap: '15px',\n  alignItems: 'center',\n};\n\n// CSS styles for active player\nconst activePlayerStyles: React.CSSProperties = {\n  fontWeight: 'bold',\n  color: '#4CAF50',\n  border: '2px solid #4CAF50',\n  borderRadius: '8px',\n  padding: '10px',\n  background: 'rgba(76, 175, 80, 0.1)',\n  boxShadow: '0 0 15px rgba(76, 175, 80, 0.3)',\n  transition: 'all 0.3s ease',\n};\n\n// CSS styles for inactive player\nconst inactivePlayerStyles: React.CSSProperties = {\n  color: '#fff',\n  padding: '10px',\n  opacity: 0.7,\n  transition: 'all 0.3s ease',\n};\n\ninterface GameContainerProps {\n  gameState: GameState | null;\n  onMove: (move: { cardIndex: number; position: Position }) => void;\n  currentPlayerId: string;\n}\n\nconst GameContainer: React.FC<GameContainerProps> = ({ gameState, onMove, currentPlayerId }) => {\n  const [selectedCardIndex, setSelectedCardIndex] = useState<number | null>(null);\n  const [validPositions, setValidPositions] = useState<Position[]>([]);\n  const [statusMessage, setStatusMessage] = useState<string>('Waiting for game to start...');\n\n  // Get current player's information\n  const currentPlayer = gameState?.players.find(p => p.id === currentPlayerId);\n  const currentPlayerIndex = gameState?.players.findIndex(p => p.id === currentPlayerId);\n  const isCurrentPlayerTurn = currentPlayer && gameState ? \n    gameState.players[gameState.currentTurn].id === currentPlayer.id : false;\n\n  console.log('Turn state:', {\n    currentPlayerId,\n    currentPlayerIndex,\n    currentTurn: gameState?.currentTurn,\n    currentTurnPlayerId: gameState?.players[gameState?.currentTurn]?.id,\n    isCurrentPlayerTurn,\n    allPlayers: gameState?.players.map(p => ({ id: p.id, name: p.name, tokenType: p.tokenType }))\n  });\n\n  useEffect(() => {\n    if (gameState) {\n      if (isCurrentPlayerTurn) {\n        setStatusMessage(\"It's your turn!\");\n      } else {\n        const activePlayer = gameState.players[gameState.currentTurn];\n        setStatusMessage(`Waiting for ${activePlayer?.name || 'opponent'} to play...`);\n      }\n    }\n  }, [gameState?.currentTurn, isCurrentPlayerTurn]);\n\n  // Handle card selection\n  const handleCardSelect = (index: number) => {\n    if (!gameState || !isCurrentPlayerTurn || !currentPlayer) return;\n\n    // If selecting the same card, deselect it\n    if (selectedCardIndex === index) {\n      setSelectedCardIndex(null);\n      setValidPositions([]);\n      return;\n    }\n\n    const card = currentPlayer.hand[index];\n    if (!card) return;\n\n    // Calculate valid positions based on card type\n    let positions: Position[] = [];\n    if (card.isOneEyedJack) {\n      // For one-eyed jacks, valid positions are opponent tokens\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          const token = space.token;\n          if (token !== TokenType.NONE && token !== currentPlayer.tokenType) {\n            positions.push({ row: rowIndex, col: colIndex });\n          }\n        });\n      });\n    } else if (card.isTwoEyedJack) {\n      // For two-eyed jacks, valid positions are empty spaces\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          if (space.token === TokenType.NONE && !space.isCorner) {\n            positions.push({ row: rowIndex, col: colIndex });\n          }\n        });\n      });\n    } else {\n      // For regular cards, get all matching card positions that aren't occupied\n      positions = getCardPositions(gameState.board, card).filter(pos => \n        gameState.board[pos.row][pos.col].token === TokenType.NONE\n      );\n    }\n\n    setSelectedCardIndex(index);\n    setValidPositions(positions);\n    setStatusMessage(positions.length > 0 \n      ? 'Select a highlighted space to place your token' \n      : 'No valid moves available for this card. Select another card.');\n  };\n\n  // Handle board space click\n  const handleBoardSpaceClick = (row: number, col: number) => {\n    if (!gameState || selectedCardIndex === null || !isCurrentPlayerTurn) {\n      console.log('Board click prevented:', {\n        hasGameState: !!gameState,\n        selectedCardIndex,\n        isCurrentPlayerTurn,\n        currentPlayerId,\n        currentTurn: gameState?.currentTurn\n      });\n      return;\n    }\n\n    // Check if the clicked position is valid\n    const isValidMove = validPositions.some(pos => pos.row === row && pos.col === col);\n    if (!isValidMove) {\n      setStatusMessage('Invalid move! Please select a highlighted space.');\n      return;\n    }\n\n    console.log('Making move:', {\n      cardIndex: selectedCardIndex,\n      position: { row, col },\n      currentPlayerId,\n      currentTurn: gameState.currentTurn\n    });\n\n    // Send the move to the server\n    onMove({ cardIndex: selectedCardIndex, position: { row, col } });\n\n    // Reset selection\n    setSelectedCardIndex(null);\n    setValidPositions([]);\n  };\n\n  if (!gameState || !currentPlayer) {\n    return <div style={containerStyles}>Waiting for game to start...</div>;\n  }\n\n  return (\n    <LazyMotion features={domAnimation}>\n      <div style={containerStyles}>\n        {/* Floating Sequence title */}\n        {/* <m.div \n          style={floatingTitleStyles}\n          initial={{ opacity: 0, x: -50 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n        >\n          Sequence\n        </m.div> */}\n        \n        <m.div \n          style={playerStatusStyles}\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div style={playerContainerStyles}>\n            {gameState.players.slice(0, Math.ceil(gameState.players.length / 2)).map((player) => (\n              <m.div \n                key={player.id} \n                style={player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles}\n                whileHover={{ scale: 1.05 }}\n              >\n                {player.name}\n                {player.id === currentPlayerId && ' (You)'}\n              </m.div>\n            ))}\n          </div>\n          \n          <m.div \n            style={sequenceTitleStyles}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.3, duration: 0.5 }}\n          >\n            Sequence\n          </m.div>\n          \n          <div style={playerContainerStyles}>\n            {gameState.players.slice(Math.ceil(gameState.players.length / 2)).map((player) => (\n              <m.div \n                key={player.id} \n                style={player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles}\n                whileHover={{ scale: 1.05 }}\n              >\n                {player.name}\n                {player.id === currentPlayerId && ' (You)'}\n              </m.div>\n            ))}\n          </div>\n        </m.div>\n        \n        <m.div \n          style={statusStyles}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n        >\n          {statusMessage}\n        </m.div>\n        \n        <div style={{ marginBottom: '100px' }}>\n          <GameBoard \n            board={gameState.board} \n            onSpaceClick={handleBoardSpaceClick}\n            validPositions={validPositions}\n          />\n        </div>\n        \n        <PlayerHand \n          hand={currentPlayer.hand}\n          selectedCardIndex={selectedCardIndex}\n          onCardSelect={handleCardSelect}\n        />\n      </div>\n    </LazyMotion>\n  );\n};\n\nexport default GameContainer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}