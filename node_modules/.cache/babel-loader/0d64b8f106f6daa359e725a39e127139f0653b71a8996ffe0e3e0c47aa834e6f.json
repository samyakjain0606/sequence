{"ast":null,"code":"// Keys for localStorage\nconst STORAGE_KEYS={GAME_ID:'sequence_game_id',PLAYER_ID:'sequence_player_id',PLAYER_NAME:'sequence_player_name',GAME_STATE:'sequence_game_state',IS_GAME_STARTED:'sequence_game_started',PLAYERS:'sequence_players'};// Save game ID to localStorage\nexport const saveGameId=gameId=>{localStorage.setItem(STORAGE_KEYS.GAME_ID,gameId);};// Get game ID from localStorage\nexport const getGameId=()=>{return localStorage.getItem(STORAGE_KEYS.GAME_ID);};// Save player ID to localStorage\nexport const savePlayerId=playerId=>{localStorage.setItem(STORAGE_KEYS.PLAYER_ID,playerId);};// Get player ID from localStorage\nexport const getPlayerId=()=>{return localStorage.getItem(STORAGE_KEYS.PLAYER_ID);};// Save player name to localStorage\nexport const savePlayerName=playerName=>{localStorage.setItem(STORAGE_KEYS.PLAYER_NAME,playerName);};// Get player name from localStorage\nexport const getPlayerName=()=>{return localStorage.getItem(STORAGE_KEYS.PLAYER_NAME);};// Save game state to localStorage\nexport const saveGameState=gameState=>{localStorage.setItem(STORAGE_KEYS.GAME_STATE,JSON.stringify(gameState));};// Get game state from localStorage\nexport const getGameState=()=>{const gameStateStr=localStorage.getItem(STORAGE_KEYS.GAME_STATE);if(!gameStateStr)return null;try{return JSON.parse(gameStateStr);}catch(error){console.error('Error parsing game state from localStorage:',error);return null;}};// Save isGameStarted state to localStorage\nexport const saveIsGameStarted=isStarted=>{localStorage.setItem(STORAGE_KEYS.IS_GAME_STARTED,isStarted?'true':'false');};// Get isGameStarted state from localStorage\nexport const getIsGameStarted=()=>{return localStorage.getItem(STORAGE_KEYS.IS_GAME_STARTED)==='true';};// Save players to localStorage\nexport const savePlayers=players=>{localStorage.setItem(STORAGE_KEYS.PLAYERS,JSON.stringify(players));};// Get players from localStorage\nexport const getPlayers=()=>{const playersStr=localStorage.getItem(STORAGE_KEYS.PLAYERS);if(!playersStr)return null;try{return JSON.parse(playersStr);}catch(error){console.error('Error parsing players from localStorage:',error);return null;}};// Clear all game data from localStorage\nexport const clearGameData=()=>{localStorage.removeItem(STORAGE_KEYS.GAME_ID);localStorage.removeItem(STORAGE_KEYS.PLAYER_ID);localStorage.removeItem(STORAGE_KEYS.PLAYER_NAME);localStorage.removeItem(STORAGE_KEYS.GAME_STATE);localStorage.removeItem(STORAGE_KEYS.IS_GAME_STARTED);localStorage.removeItem(STORAGE_KEYS.PLAYERS);};","map":{"version":3,"names":["STORAGE_KEYS","GAME_ID","PLAYER_ID","PLAYER_NAME","GAME_STATE","IS_GAME_STARTED","PLAYERS","saveGameId","gameId","localStorage","setItem","getGameId","getItem","savePlayerId","playerId","getPlayerId","savePlayerName","playerName","getPlayerName","saveGameState","gameState","JSON","stringify","getGameState","gameStateStr","parse","error","console","saveIsGameStarted","isStarted","getIsGameStarted","savePlayers","players","getPlayers","playersStr","clearGameData","removeItem"],"sources":["/Users/samjain/seq/sequence/src/utils/localStorage.ts"],"sourcesContent":["import { GameState } from '../models/types';\n\n// Keys for localStorage\nconst STORAGE_KEYS = {\n  GAME_ID: 'sequence_game_id',\n  PLAYER_ID: 'sequence_player_id',\n  PLAYER_NAME: 'sequence_player_name',\n  GAME_STATE: 'sequence_game_state',\n  IS_GAME_STARTED: 'sequence_game_started',\n  PLAYERS: 'sequence_players'\n};\n\n// Save game ID to localStorage\nexport const saveGameId = (gameId: string): void => {\n  localStorage.setItem(STORAGE_KEYS.GAME_ID, gameId);\n};\n\n// Get game ID from localStorage\nexport const getGameId = (): string | null => {\n  return localStorage.getItem(STORAGE_KEYS.GAME_ID);\n};\n\n// Save player ID to localStorage\nexport const savePlayerId = (playerId: string): void => {\n  localStorage.setItem(STORAGE_KEYS.PLAYER_ID, playerId);\n};\n\n// Get player ID from localStorage\nexport const getPlayerId = (): string | null => {\n  return localStorage.getItem(STORAGE_KEYS.PLAYER_ID);\n};\n\n// Save player name to localStorage\nexport const savePlayerName = (playerName: string): void => {\n  localStorage.setItem(STORAGE_KEYS.PLAYER_NAME, playerName);\n};\n\n// Get player name from localStorage\nexport const getPlayerName = (): string | null => {\n  return localStorage.getItem(STORAGE_KEYS.PLAYER_NAME);\n};\n\n// Save game state to localStorage\nexport const saveGameState = (gameState: GameState): void => {\n  localStorage.setItem(STORAGE_KEYS.GAME_STATE, JSON.stringify(gameState));\n};\n\n// Get game state from localStorage\nexport const getGameState = (): GameState | null => {\n  const gameStateStr = localStorage.getItem(STORAGE_KEYS.GAME_STATE);\n  if (!gameStateStr) return null;\n  \n  try {\n    return JSON.parse(gameStateStr) as GameState;\n  } catch (error) {\n    console.error('Error parsing game state from localStorage:', error);\n    return null;\n  }\n};\n\n// Save isGameStarted state to localStorage\nexport const saveIsGameStarted = (isStarted: boolean): void => {\n  localStorage.setItem(STORAGE_KEYS.IS_GAME_STARTED, isStarted ? 'true' : 'false');\n};\n\n// Get isGameStarted state from localStorage\nexport const getIsGameStarted = (): boolean => {\n  return localStorage.getItem(STORAGE_KEYS.IS_GAME_STARTED) === 'true';\n};\n\n// Save players to localStorage\nexport const savePlayers = (players: { id: string; name: string }[]): void => {\n  localStorage.setItem(STORAGE_KEYS.PLAYERS, JSON.stringify(players));\n};\n\n// Get players from localStorage\nexport const getPlayers = (): { id: string; name: string }[] | null => {\n  const playersStr = localStorage.getItem(STORAGE_KEYS.PLAYERS);\n  if (!playersStr) return null;\n  \n  try {\n    return JSON.parse(playersStr) as { id: string; name: string }[];\n  } catch (error) {\n    console.error('Error parsing players from localStorage:', error);\n    return null;\n  }\n};\n\n// Clear all game data from localStorage\nexport const clearGameData = (): void => {\n  localStorage.removeItem(STORAGE_KEYS.GAME_ID);\n  localStorage.removeItem(STORAGE_KEYS.PLAYER_ID);\n  localStorage.removeItem(STORAGE_KEYS.PLAYER_NAME);\n  localStorage.removeItem(STORAGE_KEYS.GAME_STATE);\n  localStorage.removeItem(STORAGE_KEYS.IS_GAME_STARTED);\n  localStorage.removeItem(STORAGE_KEYS.PLAYERS);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}