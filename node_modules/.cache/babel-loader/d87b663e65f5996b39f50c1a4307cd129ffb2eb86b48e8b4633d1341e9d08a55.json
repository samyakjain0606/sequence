{"ast":null,"code":"var _jsxFileName = \"/Users/samjain/seq/sequence/src/components/GameContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TokenType } from '../models/types';\nimport { getCardPositions } from '../utils/boardUtils';\n// import { findCardOnBoard } from '../utils/cardUtils';\nimport GameBoard from './GameBoard';\nimport PlayerHand from './PlayerHand';\nimport { LazyMotion, domAnimation, m } from 'framer-motion';\n\n// CSS styles for game container\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyles = {\n  maxWidth: '1200px',\n  margin: '0 auto',\n  padding: '10px',\n  paddingBottom: '220px',\n  // Add padding at the bottom to account for the fixed hand\n  position: 'relative' // For absolute positioning of the floating title\n};\n\n// // CSS styles for floating title\n// const floatingTitleStyles: React.CSSProperties = {\n//   position: 'absolute',\n//   left: '10px',\n//   top: '50%',\n//   transform: 'translateY(-50%) rotate(-90deg)',\n//   transformOrigin: 'left center',\n//   fontSize: '2.5rem',\n//   fontWeight: 700,\n//   color: 'rgba(255, 255, 255, 0.15)',\n//   letterSpacing: '5px',\n//   textTransform: 'uppercase',\n//   pointerEvents: 'none',\n//   zIndex: 0,\n//   textShadow: '0 0 10px rgba(76, 175, 80, 0.2)',\n// };\n\n// CSS styles for status display\nconst statusStyles = {\n  textAlign: 'center',\n  margin: '15px 0',\n  padding: '10px',\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  borderRadius: '8px',\n  fontWeight: 'bold',\n  color: '#fff',\n  backdropFilter: 'blur(5px)',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  border: '1px solid rgba(255, 255, 255, 0.05)'\n};\n\n// CSS styles for player status\nconst playerStatusStyles = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  margin: '12px 0',\n  padding: '8px 20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)',\n  borderRadius: '12px',\n  backdropFilter: 'blur(5px)',\n  position: 'relative'\n};\n\n// CSS styles for sequence title in player bar\nconst sequenceTitleStyles = {\n  fontSize: '1.5rem',\n  fontWeight: 'bold',\n  letterSpacing: '3px',\n  color: 'rgba(255, 215, 0, 0.9)',\n  textShadow: '0 0 8px rgba(255, 215, 0, 0.4)',\n  margin: '0 15px',\n  textTransform: 'uppercase',\n  whiteSpace: 'nowrap'\n};\n\n// CSS styles for player container\nconst playerContainerStyles = {\n  display: 'flex',\n  gap: '15px',\n  alignItems: 'center'\n};\n\n// CSS styles for active player\nconst activePlayerStyles = {\n  fontWeight: 'bold',\n  color: '#4CAF50',\n  border: '2px solid #4CAF50',\n  borderRadius: '8px',\n  padding: '10px',\n  background: 'rgba(76, 175, 80, 0.1)',\n  boxShadow: '0 0 15px rgba(76, 175, 80, 0.3)',\n  transition: 'all 0.3s ease'\n};\n\n// CSS styles for inactive player\nconst inactivePlayerStyles = {\n  color: '#fff',\n  padding: '10px',\n  opacity: 0.7,\n  transition: 'all 0.3s ease'\n};\nconst GameContainer = ({\n  gameState,\n  onMove,\n  currentPlayerId\n}) => {\n  _s();\n  var _gameState$players$ga;\n  const [selectedCardIndex, setSelectedCardIndex] = useState(null);\n  const [validPositions, setValidPositions] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('Waiting for game to start...');\n\n  // Get current player's information\n  const currentPlayer = gameState === null || gameState === void 0 ? void 0 : gameState.players.find(p => p.id === currentPlayerId);\n  const currentPlayerIndex = gameState === null || gameState === void 0 ? void 0 : gameState.players.findIndex(p => p.id === currentPlayerId);\n  const isCurrentPlayerTurn = currentPlayer && gameState ? gameState.players[gameState.currentTurn].id === currentPlayer.id : false;\n  console.log('Turn state:', {\n    currentPlayerId,\n    currentPlayerIndex,\n    currentTurn: gameState === null || gameState === void 0 ? void 0 : gameState.currentTurn,\n    currentTurnPlayerId: gameState === null || gameState === void 0 ? void 0 : (_gameState$players$ga = gameState.players[gameState === null || gameState === void 0 ? void 0 : gameState.currentTurn]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id,\n    isCurrentPlayerTurn,\n    allPlayers: gameState === null || gameState === void 0 ? void 0 : gameState.players.map(p => ({\n      id: p.id,\n      name: p.name,\n      tokenType: p.tokenType\n    }))\n  });\n  useEffect(() => {\n    if (gameState) {\n      if (isCurrentPlayerTurn) {\n        setStatusMessage(\"It's your turn!\");\n      } else {\n        const activePlayer = gameState.players[gameState.currentTurn];\n        setStatusMessage(`Waiting for ${(activePlayer === null || activePlayer === void 0 ? void 0 : activePlayer.name) || 'opponent'} to play...`);\n      }\n    }\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.currentTurn, isCurrentPlayerTurn, gameState]);\n\n  // Handle card selection\n  const handleCardSelect = index => {\n    if (!gameState || !isCurrentPlayerTurn || !currentPlayer) return;\n\n    // If selecting the same card, deselect it\n    if (selectedCardIndex === index) {\n      setSelectedCardIndex(null);\n      setValidPositions([]);\n      return;\n    }\n    const card = currentPlayer.hand[index];\n    if (!card) return;\n\n    // Calculate valid positions based on card type\n    let positions = [];\n    if (card.isOneEyedJack) {\n      // For one-eyed jacks, valid positions are opponent tokens\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          const token = space.token;\n          if (token !== TokenType.NONE && token !== currentPlayer.tokenType) {\n            positions.push({\n              row: rowIndex,\n              col: colIndex\n            });\n          }\n        });\n      });\n    } else if (card.isTwoEyedJack) {\n      // For two-eyed jacks, valid positions are empty spaces\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          if (space.token === TokenType.NONE && !space.isCorner) {\n            positions.push({\n              row: rowIndex,\n              col: colIndex\n            });\n          }\n        });\n      });\n    } else {\n      // For regular cards, get all matching card positions that aren't occupied\n      positions = getCardPositions(gameState.board, card).filter(pos => gameState.board[pos.row][pos.col].token === TokenType.NONE);\n    }\n    setSelectedCardIndex(index);\n    setValidPositions(positions);\n    setStatusMessage(positions.length > 0 ? 'Select a highlighted space to place your token' : 'No valid moves available for this card. Select another card.');\n  };\n\n  // Handle board space click\n  const handleBoardSpaceClick = (row, col) => {\n    if (!gameState || selectedCardIndex === null || !isCurrentPlayerTurn) {\n      console.log('Board click prevented:', {\n        hasGameState: !!gameState,\n        selectedCardIndex,\n        isCurrentPlayerTurn,\n        currentPlayerId,\n        currentTurn: gameState === null || gameState === void 0 ? void 0 : gameState.currentTurn\n      });\n      return;\n    }\n\n    // Check if the clicked position is valid\n    const isValidMove = validPositions.some(pos => pos.row === row && pos.col === col);\n    if (!isValidMove) {\n      setStatusMessage('Invalid move! Please select a highlighted space.');\n      return;\n    }\n    console.log('Making move:', {\n      cardIndex: selectedCardIndex,\n      position: {\n        row,\n        col\n      },\n      currentPlayerId,\n      currentTurn: gameState.currentTurn\n    });\n\n    // Send the move to the server\n    onMove({\n      cardIndex: selectedCardIndex,\n      position: {\n        row,\n        col\n      }\n    });\n\n    // Reset selection\n    setSelectedCardIndex(null);\n    setValidPositions([]);\n  };\n  if (!gameState || !currentPlayer) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyles,\n      children: \"Waiting for game to start...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(LazyMotion, {\n    features: domAnimation,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyles,\n      children: [/*#__PURE__*/_jsxDEV(m.div, {\n        style: playerStatusStyles,\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: playerContainerStyles,\n          children: gameState.players.slice(0, Math.ceil(gameState.players.length / 2)).map(player => /*#__PURE__*/_jsxDEV(m.div, {\n            style: player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles,\n            whileHover: {\n              scale: 1.05\n            },\n            children: [player.name, player.id === currentPlayerId && ' (You)']\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(m.div, {\n          style: sequenceTitleStyles,\n          initial: {\n            opacity: 0,\n            scale: 0.8\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          transition: {\n            delay: 0.3,\n            duration: 0.5\n          },\n          children: \"Sequence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: playerContainerStyles,\n          children: gameState.players.slice(Math.ceil(gameState.players.length / 2)).map(player => /*#__PURE__*/_jsxDEV(m.div, {\n            style: player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles,\n            whileHover: {\n              scale: 1.05\n            },\n            children: [player.name, player.id === currentPlayerId && ' (You)']\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(m.div, {\n        style: statusStyles,\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5,\n          delay: 0.2\n        },\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(GameBoard, {\n          board: gameState.board,\n          onSpaceClick: handleBoardSpaceClick,\n          validPositions: validPositions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerHand, {\n        hand: currentPlayer.hand,\n        selectedCardIndex: selectedCardIndex,\n        onCardSelect: handleCardSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(GameContainer, \"n6fXZzyL/WA1u45MyJtas0LkCoY=\");\n_c = GameContainer;\nexport default GameContainer;\nvar _c;\n$RefreshReg$(_c, \"GameContainer\");","map":{"version":3,"names":["React","useState","useEffect","TokenType","getCardPositions","GameBoard","PlayerHand","LazyMotion","domAnimation","m","jsxDEV","_jsxDEV","containerStyles","maxWidth","margin","padding","paddingBottom","position","statusStyles","textAlign","backgroundColor","borderRadius","fontWeight","color","backdropFilter","boxShadow","border","playerStatusStyles","display","justifyContent","alignItems","sequenceTitleStyles","fontSize","letterSpacing","textShadow","textTransform","whiteSpace","playerContainerStyles","gap","activePlayerStyles","background","transition","inactivePlayerStyles","opacity","GameContainer","gameState","onMove","currentPlayerId","_s","_gameState$players$ga","selectedCardIndex","setSelectedCardIndex","validPositions","setValidPositions","statusMessage","setStatusMessage","currentPlayer","players","find","p","id","currentPlayerIndex","findIndex","isCurrentPlayerTurn","currentTurn","console","log","currentTurnPlayerId","allPlayers","map","name","tokenType","activePlayer","handleCardSelect","index","card","hand","positions","isOneEyedJack","board","forEach","row","rowIndex","space","colIndex","token","NONE","push","col","isTwoEyedJack","isCorner","filter","pos","length","handleBoardSpaceClick","hasGameState","isValidMove","some","cardIndex","style","children","fileName","_jsxFileName","lineNumber","columnNumber","features","div","initial","y","animate","duration","slice","Math","ceil","player","whileHover","scale","delay","marginBottom","onSpaceClick","onCardSelect","_c","$RefreshReg$"],"sources":["/Users/samjain/seq/sequence/src/components/GameContainer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GameState, TokenType, Position } from '../models/types';\nimport { getCardPositions } from '../utils/boardUtils';\n// import { findCardOnBoard } from '../utils/cardUtils';\nimport GameBoard from './GameBoard';\nimport PlayerHand from './PlayerHand';\nimport { LazyMotion, domAnimation, m } from 'framer-motion';\n\n// CSS styles for game container\nconst containerStyles: React.CSSProperties = {\n  maxWidth: '1200px',\n  margin: '0 auto',\n  padding: '10px',\n  paddingBottom: '220px', // Add padding at the bottom to account for the fixed hand\n  position: 'relative', // For absolute positioning of the floating title\n};\n\n// // CSS styles for floating title\n// const floatingTitleStyles: React.CSSProperties = {\n//   position: 'absolute',\n//   left: '10px',\n//   top: '50%',\n//   transform: 'translateY(-50%) rotate(-90deg)',\n//   transformOrigin: 'left center',\n//   fontSize: '2.5rem',\n//   fontWeight: 700,\n//   color: 'rgba(255, 255, 255, 0.15)',\n//   letterSpacing: '5px',\n//   textTransform: 'uppercase',\n//   pointerEvents: 'none',\n//   zIndex: 0,\n//   textShadow: '0 0 10px rgba(76, 175, 80, 0.2)',\n// };\n\n// CSS styles for status display\nconst statusStyles: React.CSSProperties = {\n  textAlign: 'center',\n  margin: '15px 0',\n  padding: '10px',\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  borderRadius: '8px',\n  fontWeight: 'bold',\n  color: '#fff',\n  backdropFilter: 'blur(5px)',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  border: '1px solid rgba(255, 255, 255, 0.05)',\n};\n\n// CSS styles for player status\nconst playerStatusStyles: React.CSSProperties = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  margin: '12px 0',\n  padding: '8px 20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)',\n  borderRadius: '12px',\n  backdropFilter: 'blur(5px)',\n  position: 'relative',\n};\n\n// CSS styles for sequence title in player bar\nconst sequenceTitleStyles: React.CSSProperties = {\n  fontSize: '1.5rem',\n  fontWeight: 'bold',\n  letterSpacing: '3px',\n  color: 'rgba(255, 215, 0, 0.9)',\n  textShadow: '0 0 8px rgba(255, 215, 0, 0.4)',\n  margin: '0 15px',\n  textTransform: 'uppercase',\n  whiteSpace: 'nowrap',\n};\n\n// CSS styles for player container\nconst playerContainerStyles: React.CSSProperties = {\n  display: 'flex',\n  gap: '15px',\n  alignItems: 'center',\n};\n\n// CSS styles for active player\nconst activePlayerStyles: React.CSSProperties = {\n  fontWeight: 'bold',\n  color: '#4CAF50',\n  border: '2px solid #4CAF50',\n  borderRadius: '8px',\n  padding: '10px',\n  background: 'rgba(76, 175, 80, 0.1)',\n  boxShadow: '0 0 15px rgba(76, 175, 80, 0.3)',\n  transition: 'all 0.3s ease',\n};\n\n// CSS styles for inactive player\nconst inactivePlayerStyles: React.CSSProperties = {\n  color: '#fff',\n  padding: '10px',\n  opacity: 0.7,\n  transition: 'all 0.3s ease',\n};\n\ninterface GameContainerProps {\n  gameState: GameState | null;\n  onMove: (move: { cardIndex: number; position: Position }) => void;\n  currentPlayerId: string;\n}\n\nconst GameContainer: React.FC<GameContainerProps> = ({ gameState, onMove, currentPlayerId }) => {\n  const [selectedCardIndex, setSelectedCardIndex] = useState<number | null>(null);\n  const [validPositions, setValidPositions] = useState<Position[]>([]);\n  const [statusMessage, setStatusMessage] = useState<string>('Waiting for game to start...');\n\n  // Get current player's information\n  const currentPlayer = gameState?.players.find(p => p.id === currentPlayerId);\n  const currentPlayerIndex = gameState?.players.findIndex(p => p.id === currentPlayerId);\n  const isCurrentPlayerTurn = currentPlayer && gameState ? \n    gameState.players[gameState.currentTurn].id === currentPlayer.id : false;\n\n  console.log('Turn state:', {\n    currentPlayerId,\n    currentPlayerIndex,\n    currentTurn: gameState?.currentTurn,\n    currentTurnPlayerId: gameState?.players[gameState?.currentTurn]?.id,\n    isCurrentPlayerTurn,\n    allPlayers: gameState?.players.map(p => ({ id: p.id, name: p.name, tokenType: p.tokenType }))\n  });\n\n  useEffect(() => {\n    if (gameState) {\n      if (isCurrentPlayerTurn) {\n        setStatusMessage(\"It's your turn!\");\n      } else {\n        const activePlayer = gameState.players[gameState.currentTurn];\n        setStatusMessage(`Waiting for ${activePlayer?.name || 'opponent'} to play...`);\n      }\n    }\n  }, [gameState?.currentTurn, isCurrentPlayerTurn, gameState]);\n\n  // Handle card selection\n  const handleCardSelect = (index: number) => {\n    if (!gameState || !isCurrentPlayerTurn || !currentPlayer) return;\n\n    // If selecting the same card, deselect it\n    if (selectedCardIndex === index) {\n      setSelectedCardIndex(null);\n      setValidPositions([]);\n      return;\n    }\n\n    const card = currentPlayer.hand[index];\n    if (!card) return;\n\n    // Calculate valid positions based on card type\n    let positions: Position[] = [];\n    if (card.isOneEyedJack) {\n      // For one-eyed jacks, valid positions are opponent tokens\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          const token = space.token;\n          if (token !== TokenType.NONE && token !== currentPlayer.tokenType) {\n            positions.push({ row: rowIndex, col: colIndex });\n          }\n        });\n      });\n    } else if (card.isTwoEyedJack) {\n      // For two-eyed jacks, valid positions are empty spaces\n      gameState.board.forEach((row, rowIndex) => {\n        row.forEach((space, colIndex) => {\n          if (space.token === TokenType.NONE && !space.isCorner) {\n            positions.push({ row: rowIndex, col: colIndex });\n          }\n        });\n      });\n    } else {\n      // For regular cards, get all matching card positions that aren't occupied\n      positions = getCardPositions(gameState.board, card).filter(pos => \n        gameState.board[pos.row][pos.col].token === TokenType.NONE\n      );\n    }\n\n    setSelectedCardIndex(index);\n    setValidPositions(positions);\n    setStatusMessage(positions.length > 0 \n      ? 'Select a highlighted space to place your token' \n      : 'No valid moves available for this card. Select another card.');\n  };\n\n  // Handle board space click\n  const handleBoardSpaceClick = (row: number, col: number) => {\n    if (!gameState || selectedCardIndex === null || !isCurrentPlayerTurn) {\n      console.log('Board click prevented:', {\n        hasGameState: !!gameState,\n        selectedCardIndex,\n        isCurrentPlayerTurn,\n        currentPlayerId,\n        currentTurn: gameState?.currentTurn\n      });\n      return;\n    }\n\n    // Check if the clicked position is valid\n    const isValidMove = validPositions.some(pos => pos.row === row && pos.col === col);\n    if (!isValidMove) {\n      setStatusMessage('Invalid move! Please select a highlighted space.');\n      return;\n    }\n\n    console.log('Making move:', {\n      cardIndex: selectedCardIndex,\n      position: { row, col },\n      currentPlayerId,\n      currentTurn: gameState.currentTurn\n    });\n\n    // Send the move to the server\n    onMove({ cardIndex: selectedCardIndex, position: { row, col } });\n\n    // Reset selection\n    setSelectedCardIndex(null);\n    setValidPositions([]);\n  };\n\n  if (!gameState || !currentPlayer) {\n    return <div style={containerStyles}>Waiting for game to start...</div>;\n  }\n\n  return (\n    <LazyMotion features={domAnimation}>\n      <div style={containerStyles}>\n        {/* Floating Sequence title */}\n        {/* <m.div \n          style={floatingTitleStyles}\n          initial={{ opacity: 0, x: -50 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n        >\n          Sequence\n        </m.div> */}\n        \n        <m.div \n          style={playerStatusStyles}\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div style={playerContainerStyles}>\n            {gameState.players.slice(0, Math.ceil(gameState.players.length / 2)).map((player) => (\n              <m.div \n                key={player.id} \n                style={player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles}\n                whileHover={{ scale: 1.05 }}\n              >\n                {player.name}\n                {player.id === currentPlayerId && ' (You)'}\n              </m.div>\n            ))}\n          </div>\n          \n          <m.div \n            style={sequenceTitleStyles}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.3, duration: 0.5 }}\n          >\n            Sequence\n          </m.div>\n          \n          <div style={playerContainerStyles}>\n            {gameState.players.slice(Math.ceil(gameState.players.length / 2)).map((player) => (\n              <m.div \n                key={player.id} \n                style={player.id === gameState.players[gameState.currentTurn].id ? activePlayerStyles : inactivePlayerStyles}\n                whileHover={{ scale: 1.05 }}\n              >\n                {player.name}\n                {player.id === currentPlayerId && ' (You)'}\n              </m.div>\n            ))}\n          </div>\n        </m.div>\n        \n        <m.div \n          style={statusStyles}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n        >\n          {statusMessage}\n        </m.div>\n        \n        <div style={{ marginBottom: '100px' }}>\n          <GameBoard \n            board={gameState.board} \n            onSpaceClick={handleBoardSpaceClick}\n            validPositions={validPositions}\n          />\n        </div>\n        \n        <PlayerHand \n          hand={currentPlayer.hand}\n          selectedCardIndex={selectedCardIndex}\n          onCardSelect={handleCardSelect}\n        />\n      </div>\n    </LazyMotion>\n  );\n};\n\nexport default GameContainer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}